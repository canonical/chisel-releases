package: libwrap0

essential:
  - libwrap0_copyright

slices:
  libs:
    essential:
      - libc6_libs
    contents:
      /usr/lib/*-linux-*/libwrap.so.0*:

  # The two host-files written by these slices are supposed to dependant on
  # the fact that these files do not already exist.
  # TODO: Use mutation scripts to only write these on a conditional that these
  # files don't already exist once starlark supports this, and once conflict
  # resolution is implemented.
  host-files:
    contents:
      /etc/hosts.allow: {text: FIXME, mutable: true}
      /etc/hosts.allow.tmp:
        text: |
          # /etc/hosts.allow: list of hosts that are allowed to access the system.
          #                   See the manual pages hosts_access(5) and hosts_options(5).
          #
          # Example:    ALL: LOCAL @some_netgroup
          #             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu
          #
          # If you're going to protect the portmapper use the name "rpcbind" for the
          # daemon name. See rpcbind(8) and rpc.mountd(8) for further information.
          #
        until: mutate
      /etc/hosts.deny: {text: FIXME, mutable: true}
      /etc/hosts.deny.tmp:
        text: |
          # /etc/hosts.deny: list of hosts that are _not_ allowed to access the system.
          #                  See the manual pages hosts_access(5) and hosts_options(5).
          #
          # Example:    ALL: some.host.name, .some.domain
          #             ALL EXCEPT in.fingerd: other.host.name, .other.domain
          #
          # If you're going to protect the portmapper use the name "rpcbind" for the
          # daemon name. See rpcbind(8) and rpc.mountd(8) for further information.
          #
          # The PARANOID wildcard matches any host whose name does not match its
          # address.
          #
          # You may wish to enable this to ensure any programs that don't
          # validate looked up hostnames still leave understandable logs. In past
          # versions of Debian this has been the default.
          # ALL: PARANOID
        until: mutate
    mutate: |
      files = content.list("/etc/")
      for x in ["hosts.allow", "hosts.deny"]:
        gr = content.read("/etc/" + x + ".tmp")
        if x in files:
          content.write("/etc/" + x, gr)
        elif gr.startswith("FIXME"):
          content.write("/etc/" + x, gr)

  copyright:
    contents:
      /usr/share/doc/libwrap0/copyright:
