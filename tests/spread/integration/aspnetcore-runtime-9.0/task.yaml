summary: Integration tests for ASP.NET 9 Runtime

variants:
    - +WithoutLibicu
    - +WithLibicu

environment:
  # needed, because libicu is not installed
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT/WithoutLibicu: "true"
  # disable noisy help text for users who run .NET for the first time
  DOTNET_NOLOGO: "true"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"

prepare: |
  required_slices=()
  if [[ -v DOTNET_SYSTEM_GLOBALIZATION_INVARIANT ]]; then
    required_slices+=(aspnetcore-runtime-9.0_core)
  else
    required_slices+=(aspnetcore-runtime-9.0_standard)
  fi
  
  # install slices
  rootfs="$(install-slices ${required_slices[@]})"
  echo "$rootfs" > ROOTFS

  # preparing the test data
  apt-get update && apt-get install -y dotnet-sdk-9.0
  cp -r web_helloworld "${rootfs}"/web_helloworld
  dotnet publish "${rootfs}"/web_helloworld/Hello.csproj --no-self-contained

  mkdir -p "${rootfs}"/proc
  mount --bind /proc "${rootfs}"/proc
  mkdir -p "${rootfs}"/dev
  head -c 500 /dev/urandom > "${rootfs}"/dev/random
  head -c 500 /dev/urandom > "${rootfs}"/dev/urandom

execute: |
  rootfs="$(cat ROOTFS)"

  # test the helloworld web app
  chroot "${rootfs}" /usr/bin/dotnet /web_helloworld/bin/Release/net9.0/Hello.dll --urls="http://0.0.0.0:5108" &
  app_pid=$!

  # Wait for the web app to start
  while ! fuser 5108/tcp > /dev/null 2>&1; do
    if ! test -d /proc/$app_pid; then
      echo "dotnet exited quickly"
      exit 1
    fi
    sleep 1
  done

  # Send a request to the web app and verify the result
  ret=0
  curl http://localhost:5108/ | grep "Hello World!" || ret=1

  # Cleanup
  kill $app_pid
  exit $ret
