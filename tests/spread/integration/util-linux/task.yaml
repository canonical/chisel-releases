summary: Integration tests for util-linux

systems:
  - -ubuntu-24.10-ppc64le
  - -ubuntu-24.10-s390x

environment:
  SLICE/bins: "bins"
  SLICE/su: "su-support"

execute: |
  rootfs="$(install-slices util-linux_${SLICE} base-files_base bash_bins)"

  # we need dev/sys mounted for some of them
  mkdir "${rootfs}"/dev
  mkdir "${rootfs}"/proc
  mkdir "${rootfs}"/sys

  mount --bind /dev "${rootfs}"/dev
  mount --bind /proc "${rootfs}"/proc
  mount --bind /sys "${rootfs}"/sys

  case ${SLICE} in
    bins)
      # Binaries involving disk, partition and device operations are only tested with
      # the `--help` command as the smoke test.
      # Some of the binaries are not possible to be tested with their functionalities
      # due to the limitation of the spread test environment.
      # Some of the binaries neither changes the status of the system, nor have
      # deterministic outputs across different systems. They are tested without
      # assertions.
      chroot "${rootfs}" choom -p 1
      chroot "${rootfs}" chrt -p 1
      # Accessing kernel dmesg is not permitted in LXD.
      chroot "${rootfs}" dmesg --help
      chroot "${rootfs}" fallocate -l 1M /tmp/fallocate-test
      test -f "${rootfs}"/tmp/fallocate-test
      chroot "${rootfs}" findmnt | grep "/dev"
      chroot "${rootfs}" flock /tmp/bash.lock -c "exit 0"
      chroot "${rootfs}" getopt Hello world | grep " -- world"
      mkdir -p "${rootfs}"/tmp/hardlink-test
      echo "Hello world" > "${rootfs}"/tmp/hardlink-test/file1
      cp "${rootfs}"/tmp/hardlink-test/file1 "${rootfs}"/tmp/hardlink-test/file2
      chroot "${rootfs}" hardlink /tmp/hardlink-test/ | grep 'Saved:[[:blank:]]*12 B'
      chroot "${rootfs}" ionice -P 1 | grep "prio"
      ipcmk_out=$(chroot "${rootfs}" ipcmk -M 1)
      shm_id=$(echo "${ipcmk_out}" | grep -oP '\d+')
      chroot "${rootfs}" ipcs -m | grep "${shm_id}"
      chroot "${rootfs}" ipcrm shm "${shm_id}"
      cp /var/log/wtmp "${rootfs}"/var/log/wtmp
      chroot "${rootfs}" lsblk | grep "loop0"
      chroot "${rootfs}" lscpu | grep "Architecture"
      chroot "${rootfs}" lsipc | grep "MSGMNI"
      chroot "${rootfs}" lsmem | grep "Total online memory"
      chroot "${rootfs}" lsns | grep "init"
      chroot "${rootfs}" mcookie | grep -E '^[0-9a-f]{32}$'
      chroot "${rootfs}" mesg --help
      chroot "${rootfs}" more /usr/share/doc/util-linux/copyright | grep "format"
      chroot "${rootfs}" mountpoint /dev | grep "/dev is a mountpoint"
      chroot "${rootfs}" namei /bin/bash | grep "l bin -> usr/bin"
      chroot "${rootfs}" nsenter bash -c "exit 0"
      chroot "${rootfs}" partx --help
      chroot "${rootfs}" prlimit | grep "CPU"
      chroot "${rootfs}" rename.ul copyright copyright2 /usr/share/doc/util-linux/copyright
      test -f "${rootfs}"/usr/share/doc/util-linux/copyright2
      chroot "${rootfs}" resizepart --help
      echo "Hello" | chroot "${rootfs}" rev | grep "olleH"
      # i386, ppc, ppc32, ppc64, s390, s390x and x86_64 are symlinks to setarch.
      chroot "${rootfs}" setarch --list | grep "linux32"
      chroot "${rootfs}" setpriv bash -c "exit 0"
      chroot "${rootfs}" setsid bash -c "exit 0"
      chroot "${rootfs}" setterm --help
      chroot "${rootfs}" taskset -p 1 | grep "pid 1's current affinity mask:"
      chroot "${rootfs}" uclampset -p 1 | grep "util_clamp: min: "
      chroot "${rootfs}" unshare bash -c "exit 0"
      chroot "${rootfs}" utmpdump --help
      chroot "${rootfs}" wdctl --help
      chroot "${rootfs}" whereis lsblk | grep "/usr/bin/lsblk"
      chroot "${rootfs}" agetty --help
      chroot "${rootfs}" blkdiscard --help
      fallocate -l 1M "${rootfs}"/test.img
      mkfs.ext4 -F "${rootfs}"/test.img
      chroot "${rootfs}" blkid /test.img | grep "ext4"
      rm "${rootfs}"/test.img
      chroot "${rootfs}" blkzone --help
      chroot "${rootfs}" blockdev --help
      chroot "${rootfs}" chcpu --help
      chroot "${rootfs}" chmem --help
      chroot "${rootfs}" findfs --help
      # Dry run, outputs differ across different system configurations
      chroot "${rootfs}" fsck -N
      chroot "${rootfs}" fsfreeze --help
      chroot "${rootfs}" fstrim --help
      chroot "${rootfs}" getty --help
      chroot "${rootfs}" isosize --help
      chroot "${rootfs}" ldattach --help
      chroot "${rootfs}" mkswap --help
      chroot "${rootfs}" pivot_root --help
      chroot "${rootfs}" readprofile --help
      chroot "${rootfs}" rtcwake --help
      cp /etc/passwd "${rootfs}"/etc/passwd
      # sulogin expects keyboard inputs to continue or exit.
      # Set timeout to let it exit without keyboard inputs after 1 second.
      chroot "${rootfs}" sulogin -t 1
      chroot "${rootfs}" swaplabel --help
      chroot "${rootfs}" switch_root --help
      chroot "${rootfs}" wipefs --help
      chroot "${rootfs}" zramctl --help
      # ensure expected links are generated
      if ! [ -e "${rootfs}"/usr/bin/pager ]; then
        echo "expected /usr/bin/pager to be generated"
        exit 1
      fi
    ;;
    su-support)
      # Test the su and runuser binaries
      cp /etc/passwd "${rootfs}"/etc/passwd
      echo "foo:!:1001:1001:Test user,,,:/tmp:/bin/bash" >> "${rootfs}"/etc/passwd
      cp /usr/bin/whoami "${rootfs}"/usr/bin/
      chmod 755 "${rootfs}"/
      chroot "${rootfs}" su foo -c whoami | grep "foo"
      chroot "${rootfs}" runuser foo -c whoami | grep "foo"
    ;;
  esac

  # cleanup
  umount -l "${rootfs}"/dev
  umount -l "${rootfs}"/proc
  umount -l "${rootfs}"/sys
