#!/bin/bash -ex
# spellchecker: ignore rootfs

# Installs one or more slices into a dynamically created temporary path.
# Usage: install-slices [<slice>...]
# Returns the path of the chiselled rootfs

function main() {
    local slices="$*"
    # add base-files_chisel slice to ensure we generate the manifest
    slices="${slices} base-files_chisel"

    local rootfs="$(mktemp -d)"
    #shellcheck disable=SC2086
    chisel cut --release "$PROJECT_PATH" --root "$rootfs" $slices
    export_manifests "$rootfs"

    echo "${rootfs}"
}

function export_manifests() {
    # if MANIFESTS_EXPORT_DIR is set, copy the manifests there
    # manifest is at /var/lib/chisel/manifest.wall
    # will be copied to $MANIFESTS_EXPORT_DIR/$test_name/manifestXXXXX.wall where
    # XXXXX is sequence number (starting from 00000)
    local rootfs="$1"
    if [ -n "$MANIFESTS_EXPORT_DIR" ]; then
        local test_name=$(basename "$PWD")
        test_name=${test_name:-default}
        local export_dir="$MANIFESTS_EXPORT_DIR/$test_name"
        mkdir -p "$export_dir"
        local seq=$(find "$export_dir" -type f -name 'manifest_*.wall' | wc -l)
        cp "$rootfs/var/lib/chisel/manifest.wall" "$export_dir/manifest_$(printf "%05d" "$seq").wall"
    fi
}

main "$@"
